<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>XHalso&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.ivanweb.cn/"/>
  <updated>2018-04-17T16:30:33.467Z</updated>
  <id>http://blog.ivanweb.cn/</id>
  
  <author>
    <name>XHalso</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>微信小程序 使用Promise封装wx.request</title>
    <link href="http://blog.ivanweb.cn/2018/04/17/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F-%E4%BD%BF%E7%94%A8Promise%E5%B0%81%E8%A3%85wx-request/"/>
    <id>http://blog.ivanweb.cn/2018/04/17/微信小程序-使用Promise封装wx-request/</id>
    <published>2018-04-17T02:06:33.000Z</published>
    <updated>2018-04-17T16:30:33.467Z</updated>
    
    <content type="html"><![CDATA[<h2 id="wx-request"><a href="#wx-request" class="headerlink" title="wx.request"></a>wx.request</h2><p>微信小程序原生的网络请求API</p><pre><code>wx.request({      url: &apos;test.php&apos;, //仅为示例，并非真实的接口地址      data: {         x: &apos;&apos; ,         y: &apos;&apos;      },      header: {          &apos;content-type&apos;: &apos;application/json&apos; // 默认值      },      success: function(res) {       console.log(res.data)     }})</code></pre><h2 id="Promise"><a href="#Promise" class="headerlink" title="Promise"></a>Promise</h2><p>使用Promise封装wx.request,在发起一个请求之前使用wx.showToast()，在接口调用结束的complete回调函数中使用wx.hideToast()</p><pre><code>const wxRequest = (params = {}, url) =&gt; {  wx.showToast({    title: &apos;加载中...&apos;,    icon: &apos;loading&apos;,    duration: 5000  })  let data = params.query || {};  return new Promise((resolve, reject) =&gt; {    wx.request({      url: url,      method: params.method || &apos;GET&apos;,      data: data,      header: { &apos;Content-Type&apos;: &apos;application/json&apos; },      success: res=&gt; {        if (res.data.status == &apos;success&apos;) {          resolve(res.data)        } else {          reject(res.msg)        }      },      complete:()=&gt;{        wx.hideToast()      },      error: e=&gt; {        reject(e)      }    })  })}module.exports = {  wxRequest,}    </code></pre><h2 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h2><p>编写一个项目的时候，最好把所有的API接口集合一个js文件中</p><pre><code>const http = require(&quot;../utils/http.js&quot;)const baseUrl = &apos;http://127.0.0.1:8888/Wxxcx&apos;const getUnionId = (params) =&gt; http.wxRequest(params, `${baseUrl}/getWxUserInfo`)const getLatLng = (params) =&gt; http.wxRequest(params, `${baseUrl}/getStationList`)const getOil = (params) =&gt; http.wxRequest(params, `${baseUrl}/getOilGun`)module.exports = {  getUnionId,  getLatLng,  getOil}</code></pre><p>接着，在pages中对应页面的js文件中引入</p><pre><code>const api = require(&apos;../../api/api.js&apos;)</code></pre><p>在对应的生命周期函数中写入</p><pre><code>api.getUnionId({  query: {    code: app.globalData.code,    iv: res.iv,    encryptedData: res.encryptedData  }}).then(res =&gt; {  console.log(res)}).catch(err =&gt; {  console.log(err)})</code></pre><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>1.<a href="https://developers.weixin.qq.com/miniprogram/dev/api/" target="_blank" rel="noopener">微信小程序</a><br>2.<a href="http://es6.ruanyifeng.com/#docs/promise" target="_blank" rel="noopener">ECMAScript 6 入门</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;wx-request&quot;&gt;&lt;a href=&quot;#wx-request&quot; class=&quot;headerlink&quot; title=&quot;wx.request&quot;&gt;&lt;/a&gt;wx.request&lt;/h2&gt;&lt;p&gt;微信小程序原生的网络请求API&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wx.requ
      
    
    </summary>
    
      <category term="微信小程序" scheme="http://blog.ivanweb.cn/categories/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
      <category term="微信小程序" scheme="http://blog.ivanweb.cn/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
</feed>
